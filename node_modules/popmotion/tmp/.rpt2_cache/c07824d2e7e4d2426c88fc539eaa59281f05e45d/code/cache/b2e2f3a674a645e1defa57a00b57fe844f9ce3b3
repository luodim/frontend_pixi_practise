{"code":"import { cancelOnFrameUpdate, onFrameUpdate } from 'framesync';\r\nimport action from '../../action';\r\nimport { angle, distance } from '../../calc';\r\nimport listen from '../listen';\r\nimport { defaultPointerPos, eventToPoint } from '../pointer/utils';\r\nvar points = [defaultPointerPos()];\r\nvar isTouchDevice = false;\r\nif (typeof document !== 'undefined') {\r\n    var updatePointsLocation = function (_a) {\r\n        var touches = _a.touches;\r\n        isTouchDevice = true;\r\n        var numTouches = touches.length;\r\n        points.length = 0;\r\n        for (var i = 0; i < numTouches; i++) {\r\n            var thisTouch = touches[i];\r\n            points.push(eventToPoint(thisTouch));\r\n        }\r\n    };\r\n    listen(document, 'touchstart touchmove', true)\r\n        .start(updatePointsLocation);\r\n}\r\nvar multitouch = function (_a) {\r\n    var _b = _a === void 0 ? {} : _a, _c = _b.preventDefault, preventDefault = _c === void 0 ? true : _c, _d = _b.scale, scale = _d === void 0 ? 1.0 : _d, _e = _b.rotate, rotate = _e === void 0 ? 0.0 : _e;\r\n    return action(function (_a) {\r\n        var update = _a.update;\r\n        var output = {\r\n            touches: points,\r\n            scale: scale,\r\n            rotate: rotate\r\n        };\r\n        var initialDistance = 0.0;\r\n        var initialRotation = 0.0;\r\n        var isGesture = points.length > 1;\r\n        if (isGesture) {\r\n            var firstTouch = points[0], secondTouch = points[1];\r\n            initialDistance = distance(firstTouch, secondTouch);\r\n            initialRotation = angle(firstTouch, secondTouch);\r\n        }\r\n        var updatePoint = function () {\r\n            if (isGesture) {\r\n                var firstTouch = points[0], secondTouch = points[1];\r\n                var newDistance = distance(firstTouch, secondTouch);\r\n                var newRotation = angle(firstTouch, secondTouch);\r\n                output.scale = scale * (newDistance / initialDistance);\r\n                output.rotate = rotate + (newRotation - initialRotation);\r\n            }\r\n            update(output);\r\n        };\r\n        var onMove = function (e) {\r\n            if (preventDefault || e.touches.length > 1)\r\n                e.preventDefault();\r\n            onFrameUpdate(updatePoint);\r\n        };\r\n        var updateOnMove = listen(document, 'touchmove', { passive: !preventDefault })\r\n            .start(onMove);\r\n        if (isTouchDevice)\r\n            onFrameUpdate(updatePoint);\r\n        return {\r\n            stop: function () {\r\n                cancelOnFrameUpdate(updatePoint);\r\n                updateOnMove.stop();\r\n            }\r\n        };\r\n    });\r\n};\r\nexport default multitouch;\r\nexport var getIsTouchDevice = function () { return isTouchDevice; };\r\n//# sourceMappingURL=index.js.map","map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/input/multitouch/index.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/mattperry/Sites/popmotion/packages/popmotion/input/multitouch/index.d.ts","text":"import { Action } from '../../action';\r\nimport { PointerProps } from '../pointer/types';\r\ndeclare const multitouch: ({ preventDefault, scale, rotate }?: PointerProps) => Action;\r\nexport default multitouch;\r\nexport declare const getIsTouchDevice: () => boolean;\r\n"}}
