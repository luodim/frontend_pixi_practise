{"code":"import { timeSinceLastFrame } from 'framesync';\r\nimport { number } from 'style-value-types';\r\nimport action from '../../action';\r\nimport vectorAction from '../../action/vector';\r\nimport { speedPerSecond } from '../../calc';\r\nimport onFrame from '../every-frame';\r\nvar spring = function (props) {\r\n    if (props === void 0) { props = {}; }\r\n    return action(function (_a) {\r\n        var update = _a.update, complete = _a.complete;\r\n        var _b = props.velocity, velocity = _b === void 0 ? 0.0 : _b;\r\n        var _c = props.from, from = _c === void 0 ? 0.0 : _c, _d = props.to, to = _d === void 0 ? 0.0 : _d, _e = props.stiffness, stiffness = _e === void 0 ? 100 : _e, _f = props.damping, damping = _f === void 0 ? 10 : _f, _g = props.mass, mass = _g === void 0 ? 1.0 : _g, _h = props.restSpeed, restSpeed = _h === void 0 ? 0.01 : _h, _j = props.restDelta, restDelta = _j === void 0 ? 0.01 : _j;\r\n        var initialVelocity = velocity ? -(velocity / 1000) : 0.0;\r\n        var t = 0;\r\n        var delta = to - from;\r\n        var position = from;\r\n        var prevPosition = position;\r\n        var springTimer = onFrame().start(function () {\r\n            var timeDelta = timeSinceLastFrame();\r\n            t += timeDelta;\r\n            var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\r\n            var angularFreq = Math.sqrt(stiffness / mass) / 1000;\r\n            prevPosition = position;\r\n            if (dampingRatio < 1) {\r\n                var envelope = Math.exp(-dampingRatio * angularFreq * t);\r\n                var expoDecay = angularFreq * Math.sqrt(1.0 - dampingRatio * dampingRatio);\r\n                position = to - envelope * ((initialVelocity + dampingRatio * angularFreq * delta)\r\n                    / expoDecay * Math.sin(expoDecay * t)\r\n                    + delta * Math.cos(expoDecay * t));\r\n            }\r\n            else {\r\n                var envelope = Math.exp(-angularFreq * t);\r\n                position = to - envelope * (delta + (initialVelocity + angularFreq * delta) * t);\r\n            }\r\n            velocity = speedPerSecond(position - prevPosition, timeDelta);\r\n            var isBelowVelocityThreshold = Math.abs(velocity) <= restSpeed;\r\n            var isBelowDisplacementThreshold = Math.abs(to - position) <= restDelta;\r\n            if (isBelowVelocityThreshold && isBelowDisplacementThreshold) {\r\n                position = to;\r\n                update(position);\r\n                springTimer.stop();\r\n                complete();\r\n            }\r\n            else {\r\n                update(position);\r\n            }\r\n        });\r\n        return {\r\n            stop: function () { return springTimer.stop(); }\r\n        };\r\n    });\r\n};\r\nexport default vectorAction(spring, {\r\n    from: number.test,\r\n    to: number.test,\r\n    stiffness: number.test,\r\n    damping: number.test,\r\n    mass: number.test,\r\n    velocity: number.test\r\n});\r\n//# sourceMappingURL=index.js.map","map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/animations/spring/index.ts\"],\"names\":[],\"mappings\":\"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\"}"}
