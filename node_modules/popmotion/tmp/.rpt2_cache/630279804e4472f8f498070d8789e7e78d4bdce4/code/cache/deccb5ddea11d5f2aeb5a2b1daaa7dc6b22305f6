{"code":"import * as tslib_1 from \"tslib\";\r\nimport { currentFrameTime } from 'framesync';\r\nimport { color, hsla } from 'style-value-types';\r\nimport { getProgressFromValue, getValueFromProgress, smooth as calcSmoothing, stepProgress } from './calc';\r\nvar noop = function (v) { return v; };\r\nexport var appendUnit = function (unit) { return function (v) { return \"\" + v + unit; }; };\r\nexport var applyOffset = function (from, to) {\r\n    var hasReceivedFrom = true;\r\n    if (to === undefined) {\r\n        to = from;\r\n        hasReceivedFrom = false;\r\n    }\r\n    var getOffset = function (v) { return v - from; };\r\n    var applyOffsetTo = function (v) { return v + to; };\r\n    return function (v) {\r\n        if (hasReceivedFrom) {\r\n            return applyOffsetTo(getOffset(v));\r\n        }\r\n        else {\r\n            from = v;\r\n            hasReceivedFrom = true;\r\n            return to;\r\n        }\r\n    };\r\n};\r\nvar blend = function (from, to, v) {\r\n    var fromExpo = from * from;\r\n    var toExpo = to * to;\r\n    return Math.sqrt(v * (toExpo - fromExpo) + fromExpo);\r\n};\r\nexport var blendColor = function (from, to) {\r\n    var fromColor = (typeof from === 'string') ? color.parse(from) : from;\r\n    var toColor = (typeof to === 'string') ? color.parse(to) : to;\r\n    var blended = tslib_1.__assign({}, fromColor);\r\n    var blendFunc = (from.hue !== undefined ||\r\n        typeof from === 'string' && hsla.test(from)) ? getValueFromProgress\r\n        : blend;\r\n    return function (v) {\r\n        blended = tslib_1.__assign({}, blended);\r\n        for (var key in blended) {\r\n            if (key !== 'alpha' && blended.hasOwnProperty(key)) {\r\n                blended[key] = blendFunc(fromColor[key], toColor[key], v);\r\n            }\r\n        }\r\n        blended.alpha = getValueFromProgress(fromColor.alpha, toColor.alpha, v);\r\n        return blended;\r\n    };\r\n};\r\nexport var clamp = function (min, max) { return function (v) { return Math.min(Math.max(v, min), max); }; };\r\nvar combineFunctions = function (a, b) { return function (v) { return b(a(v)); }; };\r\nexport var pipe = function () {\r\n    var transformers = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        transformers[_i] = arguments[_i];\r\n    }\r\n    return transformers.reduce(combineFunctions);\r\n};\r\nexport var conditional = function (check, apply) { return function (v) { return check(v) ? apply(v) : v; }; };\r\nvar slowInterpolate = function (input, output, rangeLength, rangeEasing) {\r\n    var finalIndex = rangeLength - 1;\r\n    if (input[0] > input[finalIndex]) {\r\n        input.reverse();\r\n        output.reverse();\r\n    }\r\n    return function (v) {\r\n        if (v <= input[0]) {\r\n            return output[0];\r\n        }\r\n        if (v >= input[finalIndex]) {\r\n            return output[finalIndex];\r\n        }\r\n        var i = 1;\r\n        for (; i < rangeLength; i++) {\r\n            if (input[i] > v || i === finalIndex) {\r\n                break;\r\n            }\r\n        }\r\n        var progressInRange = getProgressFromValue(input[i - 1], input[i], v);\r\n        var easedProgress = (rangeEasing) ? rangeEasing[i - 1](progressInRange) : progressInRange;\r\n        return getValueFromProgress(output[i - 1], output[i], easedProgress);\r\n    };\r\n};\r\nvar fastInterpolate = function (minA, maxA, minB, maxB) { return function (v) {\r\n    return (((v - minA) * (maxB - minB)) / (maxA - minA)) + minB;\r\n}; };\r\nexport var interpolate = function (input, output, rangeEasing) {\r\n    var rangeLength = input.length;\r\n    return rangeLength !== 2\r\n        ? slowInterpolate(input, output, rangeLength, rangeEasing)\r\n        : fastInterpolate(input[0], input[1], output[0], output[1]);\r\n};\r\nexport var generateStaticSpring = function (alterDisplacement) {\r\n    if (alterDisplacement === void 0) { alterDisplacement = noop; }\r\n    return function (constant, origin) { return function (v) {\r\n        var displacement = origin - v;\r\n        var springModifiedDisplacement = -constant * (0 - alterDisplacement(Math.abs(displacement)));\r\n        return (displacement <= 0) ? origin + springModifiedDisplacement : origin - springModifiedDisplacement;\r\n    }; };\r\n};\r\nexport var linearSpring = generateStaticSpring();\r\nexport var nonlinearSpring = generateStaticSpring(Math.sqrt);\r\nexport var wrap = function (min, max) { return function (v) {\r\n    var rangeSize = max - min;\r\n    return ((v - min) % rangeSize + rangeSize) % rangeSize + min;\r\n}; };\r\nexport var smooth = function (strength) {\r\n    if (strength === void 0) { strength = 50; }\r\n    var previousValue = 0;\r\n    var lastUpdated = 0;\r\n    return function (v) {\r\n        var currentFramestamp = currentFrameTime();\r\n        var timeDelta = (currentFramestamp !== lastUpdated) ? currentFramestamp - lastUpdated : 0;\r\n        var newValue = timeDelta ? calcSmoothing(v, previousValue, timeDelta, strength) : previousValue;\r\n        lastUpdated = currentFramestamp;\r\n        previousValue = newValue;\r\n        return newValue;\r\n    };\r\n};\r\nexport var snap = function (points) {\r\n    if (typeof points === 'number') {\r\n        return function (v) { return Math.round(v / points) * points; };\r\n    }\r\n    else {\r\n        var i_1 = 0;\r\n        var numPoints_1 = points.length;\r\n        return function (v) {\r\n            var lastDistance = Math.abs(points[0] - v);\r\n            for (i_1 = 1; i_1 < numPoints_1; i_1++) {\r\n                var point = points[i_1];\r\n                var distance = Math.abs(point - v);\r\n                if (distance === 0)\r\n                    return point;\r\n                if (distance > lastDistance)\r\n                    return points[i_1 - 1];\r\n                if (i_1 === numPoints_1 - 1)\r\n                    return point;\r\n                lastDistance = distance;\r\n            }\r\n        };\r\n    }\r\n};\r\nexport var steps = function (st, min, max) {\r\n    if (min === void 0) { min = 0; }\r\n    if (max === void 0) { max = 1; }\r\n    return function (v) {\r\n        var progress = getProgressFromValue(min, max, v);\r\n        return getValueFromProgress(min, max, stepProgress(st, progress));\r\n    };\r\n};\r\nexport var transformMap = function (childTransformers) { return function (v) {\r\n    var output = tslib_1.__assign({}, v);\r\n    for (var key in childTransformers) {\r\n        if (childTransformers.hasOwnProperty(key)) {\r\n            var childTransformer = childTransformers[key];\r\n            output[key] = childTransformer(v[key]);\r\n        }\r\n    }\r\n    return output;\r\n}; };\r\n//# sourceMappingURL=transformers.js.map","map":"{\"version\":3,\"file\":\"transformers.js\",\"sourceRoot\":\"\",\"sources\":[\"src/transformers.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/mattperry/Sites/popmotion/packages/popmotion/transformers.d.ts","text":"import { HSLA } from 'style-value-types';\r\nimport { Easing } from './easing';\r\nexport declare const appendUnit: (unit: string) => (v: number) => string;\r\nexport declare const applyOffset: (from: number, to?: number) => (v: number) => number;\r\nexport declare const blendColor: (from: string | HSLA | {\r\n    red: number;\r\n    green: number;\r\n    blue: number;\r\n    alpha?: number;\r\n}, to: string | HSLA | {\r\n    red: number;\r\n    green: number;\r\n    blue: number;\r\n    alpha?: number;\r\n}) => (v: number) => any;\r\nexport declare const clamp: (min: number, max: number) => (v: number) => number;\r\nexport declare const pipe: (...transformers: Function[]) => Function;\r\nexport declare type Check = (v: any) => boolean;\r\nexport declare type Apply = (v: any) => any;\r\nexport declare const conditional: (check: Check, apply: Apply) => (v: any) => any;\r\nexport declare const interpolate: (input: number[], output: number[], rangeEasing?: Easing[]) => (v: number) => number;\r\nexport declare const generateStaticSpring: (alterDisplacement?: Function) => (constant: number, origin: number) => (v: number) => number;\r\nexport declare const linearSpring: (constant: number, origin: number) => (v: number) => number;\r\nexport declare const nonlinearSpring: (constant: number, origin: number) => (v: number) => number;\r\nexport declare const wrap: (min: number, max: number) => (v: number) => number;\r\nexport declare const smooth: (strength?: number) => (v: number) => number;\r\nexport declare const snap: (points: number | number[]) => (v: number) => number;\r\nexport declare const steps: (st: number, min?: number, max?: number) => (v: number) => number;\r\nexport declare const transformMap: (childTransformers: {\r\n    [key: string]: Function;\r\n}) => (v: any) => {\r\n    [key: string]: any;\r\n};\r\n"}}
